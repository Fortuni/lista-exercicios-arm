//Exercício 3 : Mensagem no led.
//O led de status de um equipamento é utilizado para sinalizar sua condição de
//operação, através de uma mensagem visual codificada como piscadas. O
//período da mensagem é de 1s e o tempo de cada piscada é de 100 ms,
//seguido por 100ms com o led apagado.
////////////
//As mensagens seguem a codificação dada pela tabela abaixo:
/////////////////////////////////////////////////////////////////////////
//	Código              |	    N	|	significado						|
//	0(000)				|		0 	|	Sempre aceso Funcionamento ok	|
//	1(001)				|		1 	|	1 Falha de comunicação			|
//	2(010)				|		2 	|	2 Entradas digitais abertas		|
//	3(011)				|		3 	|	3 Termopar aberto				|
//	4(100)				|		4 	|	4 Curto na saída 				|
//	5(101)				|		5   |   5 Fusível aberto				|
/////////////////////////////////////////////////////////////////////////
    //pb5	pb4		pb3
 //	  0      0       0

//O led é ativo em HIGH, conectado ao PA8.
//Utilize os pinos PB3, PB4 e PB5 para entrada do código. Podem ser
//utilizados botões, chaves ou mesmo jumpers.


void tempo (void) {
if(aux == 0) {//utiliza o valor da variavel para definir o a frequencia; SEMPRE ACESO FUNCIONAMENTO OK
TIM10->PSC=1;
TIM10->ARR=1;
}
if(aux == 1) {//utiliza o valor da variavel para definir o a frequencia;//FALHA NA COMUNICAÇÃO
TIM10->PSC=7999;
TIM10->ARR=999;
}
if(aux == 2) {//utiliza o valor da variavel para definir o a frequencia;ENTRADAS DIGITAIS ABERTAS
TIM10->PSC=999;
TIM10->ARR=3999;
}
if(aux == 3) {//utiliza o valor da variavel para definir o a frequencia;//TERMOPAR ABERTO
TIM10->PSC=999;
TIM10->ARR=2665;
}
if(aux == 4) {//utiliza o valor da variavel para definir o a frequencia;//CURTO NA SAIDA
TIM10->PSC=1999;
TIM10->ARR=999;
}
if(aux == 5) {//utiliza o valor da variavel para definir o a frequencia;//FUSIVEL ABERTO
TIM10->PSC=1599;
TIM10->ARR=999;
}
}
while((TIM10->SR & 0x0001) == 0x0000) {  // verifica se o cronômetro foi "setado" (acabou a contagem);
// enquanto o cronômetro não for "setado para 1", a contagem irá continuar dentro desse while;//
}
TIM10->SR&=~(0x0001);  // "resetar" o cronômetro, botando zero no bit em questão;// RESETA O FLAG
}

